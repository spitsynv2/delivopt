<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.solvd.delivopt.repo.IOrderDAO">
    <resultMap id="OrdersResultMap" type="com.solvd.delivopt.model.Order">
        <id property="id" column="id"/>
        <result property="clientId" column="client_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="status" column="status"/>

        <association property="destinationAddress" javaType="com.solvd.delivopt.model.Address"
                     select="com.solvd.delivopt.repo.IAddressDAO.readById" column="destination_address_id"/>

        <collection property="orderedGoods" ofType="com.solvd.delivopt.model.OrderedGoods"
                    select="com.solvd.delivopt.repo.IOrderedGoodsDAO.readAllByOrderId" column="id"/>
    </resultMap>

    <select id="readById" resultMap="OrdersResultMap">
        SELECT * FROM Orders WHERE id = #{id}
    </select>

    <select id="readAll" resultMap="OrdersResultMap">
        SELECT * FROM Orders
    </select>

    <select id="readAllByClientId" resultMap="OrdersResultMap">
        SELECT * FROM Orders WHERE client_id = #{clientId}
    </select>

    <select id="readAllByDeliveryId" resultMap="OrdersResultMap">
        SELECT * FROM Orders
        WHERE id IN (
        SELECT order_id FROM Orders_Delivery
        WHERE Orders_Delivery.delivery_id = #{id}
        )
    </select>

    <delete id="deleteById">
        DELETE FROM Orders WHERE id = #{id}
    </delete>

    <update id="update">
        UPDATE Orders SET
        client_id = #{clientId},
        destination_address_id = #{destinationAddress.id},
        order_date = #{orderDate},
        status = #{status}
        WHERE id = #{id}
    </update>

    <insert id="create">
        INSERT INTO Orders (client_id, destination_address_id, order_date, status)
        VALUES (#{clientId}, #{destinationAddress.id}, #{orderDate}, #{status})
    </insert>
</mapper>
